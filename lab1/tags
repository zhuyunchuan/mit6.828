!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
ALT	kern/console.c	213;"	d	language:C	file:
ASM	lib/string.c	9;"	d	language:C	file:
BUFLEN	lib/readline.c	4;"	d	language:C	file:
C	kern/console.c	280;"	d	language:C	file:
CAPSLOCK	kern/console.c	215;"	d	language:C	file:
CGA_BASE	kern/console.h	13;"	d	language:C++
CGA_BUF	kern/console.h	14;"	d	language:C++
CMDBUF_SIZE	kern/monitor.c	15;"	d	language:C	file:
CMDBYTE	inc/kbdreg.h	60;"	d	language:C++
COM1	kern/console.c	25;"	d	language:C	file:
COM_DLL	kern/console.c	29;"	d	language:C	file:
COM_DLM	kern/console.c	30;"	d	language:C	file:
COM_FCR	kern/console.c	34;"	d	language:C	file:
COM_IER	kern/console.c	31;"	d	language:C	file:
COM_IER_RDI	kern/console.c	32;"	d	language:C	file:
COM_IIR	kern/console.c	33;"	d	language:C	file:
COM_LCR	kern/console.c	35;"	d	language:C	file:
COM_LCR_DLAB	kern/console.c	36;"	d	language:C	file:
COM_LCR_WLEN8	kern/console.c	37;"	d	language:C	file:
COM_LSR	kern/console.c	42;"	d	language:C	file:
COM_LSR_DATA	kern/console.c	43;"	d	language:C	file:
COM_LSR_TSRE	kern/console.c	45;"	d	language:C	file:
COM_LSR_TXRDY	kern/console.c	44;"	d	language:C	file:
COM_MCR	kern/console.c	38;"	d	language:C	file:
COM_MCR_DTR	kern/console.c	40;"	d	language:C	file:
COM_MCR_OUT2	kern/console.c	41;"	d	language:C	file:
COM_MCR_RTS	kern/console.c	39;"	d	language:C	file:
COM_RX	kern/console.c	27;"	d	language:C	file:
COM_TX	kern/console.c	28;"	d	language:C	file:
CONSBUFSIZE	kern/console.c	376;"	d	language:C	file:
CR0_AM	inc/mmu.h	88;"	d	language:C++
CR0_CD	inc/mmu.h	90;"	d	language:C++
CR0_EM	inc/mmu.h	83;"	d	language:C++
CR0_ET	inc/mmu.h	85;"	d	language:C++
CR0_MP	inc/mmu.h	82;"	d	language:C++
CR0_NE	inc/mmu.h	86;"	d	language:C++
CR0_NW	inc/mmu.h	89;"	d	language:C++
CR0_PE	inc/mmu.h	81;"	d	language:C++
CR0_PG	inc/mmu.h	91;"	d	language:C++
CR0_TS	inc/mmu.h	84;"	d	language:C++
CR0_WP	inc/mmu.h	87;"	d	language:C++
CR4_DE	inc/mmu.h	96;"	d	language:C++
CR4_MCE	inc/mmu.h	94;"	d	language:C++
CR4_PCE	inc/mmu.h	93;"	d	language:C++
CR4_PSE	inc/mmu.h	95;"	d	language:C++
CR4_PVI	inc/mmu.h	98;"	d	language:C++
CR4_TSD	inc/mmu.h	97;"	d	language:C++
CR4_VME	inc/mmu.h	99;"	d	language:C++
CRT_COLS	kern/console.h	17;"	d	language:C++
CRT_ROWS	kern/console.h	16;"	d	language:C++
CRT_SIZE	kern/console.h	18;"	d	language:C++
CTL	kern/console.c	212;"	d	language:C	file:
Command	kern/monitor.c	/^struct Command {$/;"	s	language:C	file:
E0ESC	kern/console.c	219;"	d	language:C	file:
ELFHDR	boot/main.c	33;"	d	language:C	file:
ELF_MAGIC	inc/elf.h	4;"	d	language:C++
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d	language:C++
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d	language:C++
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d	language:C++
ELF_PROG_LOAD	inc/elf.h	49;"	d	language:C++
ELF_SHN_UNDEF	inc/elf.h	63;"	d	language:C++
ELF_SHT_NULL	inc/elf.h	57;"	d	language:C++
ELF_SHT_PROGBITS	inc/elf.h	58;"	d	language:C++
ELF_SHT_STRTAB	inc/elf.h	60;"	d	language:C++
ELF_SHT_SYMTAB	inc/elf.h	59;"	d	language:C++
EXTPHYSMEM	inc/memlayout.h	88;"	d	language:C++
E_BAD_ENV	inc/error.h	8;"	d	language:C++
E_FAULT	inc/error.h	14;"	d	language:C++
E_INVAL	inc/error.h	10;"	d	language:C++
E_NO_FREE_ENV	inc/error.h	12;"	d	language:C++
E_NO_MEM	inc/error.h	11;"	d	language:C++
E_UNSPECIFIED	inc/error.h	7;"	d	language:C++
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s	language:C++
Elf	inc/elf.h	/^struct Elf {$/;"	s	language:C++
FEC_PR	inc/mmu.h	125;"	d	language:C++
FEC_U	inc/mmu.h	127;"	d	language:C++
FEC_WR	inc/mmu.h	126;"	d	language:C++
FL_AC	inc/mmu.h	119;"	d	language:C++
FL_AF	inc/mmu.h	104;"	d	language:C++
FL_CF	inc/mmu.h	102;"	d	language:C++
FL_DF	inc/mmu.h	109;"	d	language:C++
FL_ID	inc/mmu.h	122;"	d	language:C++
FL_IF	inc/mmu.h	108;"	d	language:C++
FL_IOPL_0	inc/mmu.h	112;"	d	language:C++
FL_IOPL_1	inc/mmu.h	113;"	d	language:C++
FL_IOPL_2	inc/mmu.h	114;"	d	language:C++
FL_IOPL_3	inc/mmu.h	115;"	d	language:C++
FL_IOPL_MASK	inc/mmu.h	111;"	d	language:C++
FL_NT	inc/mmu.h	116;"	d	language:C++
FL_OF	inc/mmu.h	110;"	d	language:C++
FL_PF	inc/mmu.h	103;"	d	language:C++
FL_RF	inc/mmu.h	117;"	d	language:C++
FL_SF	inc/mmu.h	106;"	d	language:C++
FL_TF	inc/mmu.h	107;"	d	language:C++
FL_VIF	inc/mmu.h	120;"	d	language:C++
FL_VIP	inc/mmu.h	121;"	d	language:C++
FL_VM	inc/mmu.h	118;"	d	language:C++
FL_ZF	inc/mmu.h	105;"	d	language:C++
GD_KD	inc/memlayout.h	17;"	d	language:C++
GD_KT	inc/memlayout.h	16;"	d	language:C++
GD_TSS	inc/memlayout.h	20;"	d	language:C++
GD_UD	inc/memlayout.h	19;"	d	language:C++
GD_UT	inc/memlayout.h	18;"	d	language:C++
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s	language:C++
IOPHYSMEM	inc/memlayout.h	87;"	d	language:C++
IO_RTC	kern/kclock.h	9;"	d	language:C++
JOS_INC_ASSERT_H	inc/assert.h	4;"	d	language:C++
JOS_INC_ELF_H	inc/elf.h	2;"	d	language:C++
JOS_INC_ERROR_H	inc/error.h	4;"	d	language:C++
JOS_INC_MALLOC_H	inc/malloc.h	2;"	d	language:C++
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d	language:C++
JOS_INC_MMU_H	inc/mmu.h	2;"	d	language:C++
JOS_INC_QUEUE_H	inc/queue.h	36;"	d	language:C++
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d	language:C++
JOS_INC_STDIO_H	inc/stdio.h	2;"	d	language:C++
JOS_INC_STRING_H	inc/string.h	2;"	d	language:C++
JOS_INC_TYPES_H	inc/types.h	2;"	d	language:C++
JOS_INC_X86_H	inc/x86.h	2;"	d	language:C++
JOS_KBDREG_H	inc/kbdreg.h	2;"	d	language:C++
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d	language:C++
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d	language:C++
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d	language:C++
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d	language:C++
JOS_STAB_H	inc/stab.h	2;"	d	language:C++
KADDR	kern/pmap.h	28;"	d	language:C++
KBCMDP	inc/kbdreg.h	29;"	d	language:C++
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d	language:C++
KBC_AUXECHO	inc/kbdreg.h	36;"	d	language:C++
KBC_AUXENABLE	inc/kbdreg.h	33;"	d	language:C++
KBC_AUXTEST	inc/kbdreg.h	34;"	d	language:C++
KBC_AUXWRITE	inc/kbdreg.h	37;"	d	language:C++
KBC_DISABLE	inc/kbdreg.h	66;"	d	language:C++
KBC_ECHO	inc/kbdreg.h	71;"	d	language:C++
KBC_ENABLE	inc/kbdreg.h	67;"	d	language:C++
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d	language:C++
KBC_KBDECHO	inc/kbdreg.h	35;"	d	language:C++
KBC_KBDENABLE	inc/kbdreg.h	41;"	d	language:C++
KBC_KBDTEST	inc/kbdreg.h	39;"	d	language:C++
KBC_MODEIND	inc/kbdreg.h	70;"	d	language:C++
KBC_PULSE0	inc/kbdreg.h	42;"	d	language:C++
KBC_PULSE1	inc/kbdreg.h	43;"	d	language:C++
KBC_PULSE2	inc/kbdreg.h	44;"	d	language:C++
KBC_PULSE3	inc/kbdreg.h	45;"	d	language:C++
KBC_RAMREAD	inc/kbdreg.h	30;"	d	language:C++
KBC_RAMWRITE	inc/kbdreg.h	31;"	d	language:C++
KBC_RESEND	inc/kbdreg.h	64;"	d	language:C++
KBC_RESET	inc/kbdreg.h	63;"	d	language:C++
KBC_SELFTEST	inc/kbdreg.h	38;"	d	language:C++
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d	language:C++
KBC_SETTABLE	inc/kbdreg.h	69;"	d	language:C++
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d	language:C++
KBDATAP	inc/kbdreg.h	47;"	d	language:C++
KBOUTP	inc/kbdreg.h	48;"	d	language:C++
KBR_ACK	inc/kbdreg.h	76;"	d	language:C++
KBR_BREAK	inc/kbdreg.h	79;"	d	language:C++
KBR_ECHO	inc/kbdreg.h	81;"	d	language:C++
KBR_EXTENDED	inc/kbdreg.h	74;"	d	language:C++
KBR_FAILURE	inc/kbdreg.h	78;"	d	language:C++
KBR_OVERRUN	inc/kbdreg.h	77;"	d	language:C++
KBR_RESEND	inc/kbdreg.h	75;"	d	language:C++
KBR_RSTDONE	inc/kbdreg.h	80;"	d	language:C++
KBSTATP	inc/kbdreg.h	19;"	d	language:C++
KBS_DIB	inc/kbdreg.h	20;"	d	language:C++
KBS_IBF	inc/kbdreg.h	21;"	d	language:C++
KBS_NOSEC	inc/kbdreg.h	24;"	d	language:C++
KBS_OCMD	inc/kbdreg.h	23;"	d	language:C++
KBS_PERR	inc/kbdreg.h	27;"	d	language:C++
KBS_RERR	inc/kbdreg.h	26;"	d	language:C++
KBS_TERR	inc/kbdreg.h	25;"	d	language:C++
KBS_WARM	inc/kbdreg.h	22;"	d	language:C++
KC8_CPU	inc/kbdreg.h	57;"	d	language:C++
KC8_IGNSEC	inc/kbdreg.h	56;"	d	language:C++
KC8_KDISABLE	inc/kbdreg.h	55;"	d	language:C++
KC8_KENABLE	inc/kbdreg.h	59;"	d	language:C++
KC8_MDISABLE	inc/kbdreg.h	54;"	d	language:C++
KC8_MENABLE	inc/kbdreg.h	58;"	d	language:C++
KC8_TRANS	inc/kbdreg.h	53;"	d	language:C++
KERNBASE	inc/memlayout.h	82;"	d	language:C++
KEY_DEL	inc/kbdreg.h	14;"	d	language:C++
KEY_DN	inc/kbdreg.h	8;"	d	language:C++
KEY_END	inc/kbdreg.h	6;"	d	language:C++
KEY_HOME	inc/kbdreg.h	5;"	d	language:C++
KEY_INS	inc/kbdreg.h	13;"	d	language:C++
KEY_LF	inc/kbdreg.h	9;"	d	language:C++
KEY_PGDN	inc/kbdreg.h	12;"	d	language:C++
KEY_PGUP	inc/kbdreg.h	11;"	d	language:C++
KEY_RT	inc/kbdreg.h	10;"	d	language:C++
KEY_UP	inc/kbdreg.h	7;"	d	language:C++
KSTACKTOP	inc/memlayout.h	95;"	d	language:C++
KSTKSIZE	inc/memlayout.h	96;"	d	language:C++
K_LDCMDBYTE	inc/kbdreg.h	51;"	d	language:C++
K_RDCMDBYTE	inc/kbdreg.h	50;"	d	language:C++
LIST_EMPTY	inc/queue.h	142;"	d	language:C++
LIST_ENTRY	inc/queue.h	129;"	d	language:C++
LIST_FIRST	inc/queue.h	147;"	d	language:C++
LIST_FOREACH	inc/queue.h	160;"	d	language:C++
LIST_HEAD	inc/queue.h	109;"	d	language:C++
LIST_HEAD_INITIALIZER	inc/queue.h	118;"	d	language:C++
LIST_INIT	inc/queue.h	168;"	d	language:C++
LIST_INSERT_AFTER	inc/queue.h	177;"	d	language:C++
LIST_INSERT_BEFORE	inc/queue.h	190;"	d	language:C++
LIST_INSERT_HEAD	inc/queue.h	201;"	d	language:C++
LIST_NEXT	inc/queue.h	153;"	d	language:C++
LIST_REMOVE	inc/queue.h	212;"	d	language:C++
MAX	inc/types.h	48;"	d	language:C++
MAXARGS	kern/monitor.c	92;"	d	language:C	file:
MAXERROR	inc/error.h	16;"	d	language:C++
MC_NVRAM_SIZE	kern/kclock.h	12;"	d	language:C++
MC_NVRAM_START	kern/kclock.h	11;"	d	language:C++
MIN	inc/types.h	42;"	d	language:C++
MONO_BASE	kern/console.h	11;"	d	language:C++
MONO_BUF	kern/console.h	12;"	d	language:C++
NCOMMANDS	kern/monitor.c	30;"	d	language:C	file:
NO	kern/console.c	209;"	d	language:C	file:
NPDENTRIES	inc/mmu.h	47;"	d	language:C++
NPTENTRIES	inc/mmu.h	48;"	d	language:C++
NULL	inc/stdio.h	7;"	d	language:C++
NULL	inc/types.h	5;"	d	language:C++
NUMLOCK	kern/console.c	216;"	d	language:C	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d	language:C++
NVRAM_BASELO	kern/kclock.h	15;"	d	language:C++
NVRAM_CENTURY	kern/kclock.h	27;"	d	language:C++
NVRAM_EXTHI	kern/kclock.h	20;"	d	language:C++
NVRAM_EXTLO	kern/kclock.h	19;"	d	language:C++
NVRAM_PEXTHI	kern/kclock.h	24;"	d	language:C++
NVRAM_PEXTLO	kern/kclock.h	23;"	d	language:C++
N_BCOMM	inc/stab.h	37;"	d	language:C++
N_BINCL	inc/stab.h	29;"	d	language:C++
N_BSLINE	inc/stab.h	25;"	d	language:C++
N_DSLINE	inc/stab.h	24;"	d	language:C++
N_ECOML	inc/stab.h	39;"	d	language:C++
N_ECOMM	inc/stab.h	38;"	d	language:C++
N_EINCL	inc/stab.h	32;"	d	language:C++
N_ENTRY	inc/stab.h	33;"	d	language:C++
N_EXCL	inc/stab.h	35;"	d	language:C++
N_FNAME	inc/stab.h	16;"	d	language:C++
N_FUN	inc/stab.h	17;"	d	language:C++
N_GSYM	inc/stab.h	15;"	d	language:C++
N_LBRAC	inc/stab.h	34;"	d	language:C++
N_LCSYM	inc/stab.h	19;"	d	language:C++
N_LENG	inc/stab.h	40;"	d	language:C++
N_LSYM	inc/stab.h	28;"	d	language:C++
N_MAIN	inc/stab.h	20;"	d	language:C++
N_PC	inc/stab.h	21;"	d	language:C++
N_PSYM	inc/stab.h	31;"	d	language:C++
N_RBRAC	inc/stab.h	36;"	d	language:C++
N_RSYM	inc/stab.h	22;"	d	language:C++
N_SLINE	inc/stab.h	23;"	d	language:C++
N_SO	inc/stab.h	27;"	d	language:C++
N_SOL	inc/stab.h	30;"	d	language:C++
N_SSYM	inc/stab.h	26;"	d	language:C++
N_STSYM	inc/stab.h	18;"	d	language:C++
PADDR	kern/pmap.h	18;"	d	language:C++
PDX	inc/mmu.h	34;"	d	language:C++
PDXSHIFT	inc/mmu.h	57;"	d	language:C++
PFTEMP	inc/memlayout.h	130;"	d	language:C++
PGADDR	inc/mmu.h	44;"	d	language:C++
PGOFF	inc/mmu.h	41;"	d	language:C++
PGSHIFT	inc/mmu.h	51;"	d	language:C++
PGSIZE	inc/mmu.h	50;"	d	language:C++
PPN	inc/mmu.h	30;"	d	language:C++
PTE_A	inc/mmu.h	65;"	d	language:C++
PTE_ADDR	inc/mmu.h	78;"	d	language:C++
PTE_AVAIL	inc/mmu.h	72;"	d	language:C++
PTE_D	inc/mmu.h	66;"	d	language:C++
PTE_MBZ	inc/mmu.h	68;"	d	language:C++
PTE_P	inc/mmu.h	60;"	d	language:C++
PTE_PCD	inc/mmu.h	64;"	d	language:C++
PTE_PS	inc/mmu.h	67;"	d	language:C++
PTE_PWT	inc/mmu.h	63;"	d	language:C++
PTE_U	inc/mmu.h	62;"	d	language:C++
PTE_USER	inc/mmu.h	75;"	d	language:C++
PTE_W	inc/mmu.h	61;"	d	language:C++
PTSHIFT	inc/mmu.h	54;"	d	language:C++
PTSIZE	inc/mmu.h	53;"	d	language:C++
PTX	inc/mmu.h	38;"	d	language:C++
PTXSHIFT	inc/mmu.h	56;"	d	language:C++
Page	inc/memlayout.h	/^struct Page {$/;"	s	language:C++
Page_LIST_entry_t	inc/memlayout.h	/^typedef LIST_ENTRY(Page) Page_LIST_entry_t;$/;"	t	language:C++
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s	language:C++
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s	language:C++
REQVA	lib/nsipc.c	8;"	d	language:C	file:
ROUNDDOWN	inc/types.h	57;"	d	language:C++
ROUNDUP	inc/types.h	63;"	d	language:C++
SCROLLLOCK	kern/console.c	217;"	d	language:C	file:
SECTSIZE	boot/main.c	32;"	d	language:C	file:
SEG	inc/mmu.h	144;"	d	language:C++
SEG	inc/mmu.h	174;"	d	language:C++
SEG16	inc/mmu.h	178;"	d	language:C++
SEG_FAULT	inc/mmu.h	172;"	d	language:C++
SEG_NULL	inc/mmu.h	141;"	d	language:C++
SEG_NULL	inc/mmu.h	170;"	d	language:C++
SETCALLGATE	inc/mmu.h	291;"	d	language:C++
SETGATE	inc/mmu.h	277;"	d	language:C++
SHIFT	kern/console.c	211;"	d	language:C	file:
STA_A	inc/mmu.h	191;"	d	language:C++
STA_C	inc/mmu.h	188;"	d	language:C++
STA_E	inc/mmu.h	187;"	d	language:C++
STA_R	inc/mmu.h	190;"	d	language:C++
STA_W	inc/mmu.h	189;"	d	language:C++
STA_X	inc/mmu.h	186;"	d	language:C++
STS_CG16	inc/mmu.h	197;"	d	language:C++
STS_CG32	inc/mmu.h	203;"	d	language:C++
STS_IG16	inc/mmu.h	199;"	d	language:C++
STS_IG32	inc/mmu.h	204;"	d	language:C++
STS_LDT	inc/mmu.h	195;"	d	language:C++
STS_T16A	inc/mmu.h	194;"	d	language:C++
STS_T16B	inc/mmu.h	196;"	d	language:C++
STS_T32A	inc/mmu.h	201;"	d	language:C++
STS_T32B	inc/mmu.h	202;"	d	language:C++
STS_TG	inc/mmu.h	198;"	d	language:C++
STS_TG16	inc/mmu.h	200;"	d	language:C++
STS_TG32	inc/mmu.h	205;"	d	language:C++
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s	language:C++
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s	language:C++
Stab	inc/stab.h	/^struct Stab {$/;"	s	language:C++
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s	language:C++
UENVS	inc/memlayout.h	109;"	d	language:C++
ULIM	inc/memlayout.h	97;"	d	language:C++
UPAGES	inc/memlayout.h	107;"	d	language:C++
USTABDATA	inc/memlayout.h	132;"	d	language:C++
USTACKTOP	inc/memlayout.h	121;"	d	language:C++
UTEMP	inc/memlayout.h	127;"	d	language:C++
UTEXT	inc/memlayout.h	124;"	d	language:C++
UTOP	inc/memlayout.h	116;"	d	language:C++
UVPT	inc/memlayout.h	105;"	d	language:C++
UXSTACKTOP	inc/memlayout.h	118;"	d	language:C++
VPD	inc/mmu.h	35;"	d	language:C++
VPN	inc/mmu.h	31;"	d	language:C++
VPT	inc/memlayout.h	94;"	d	language:C++
WHITESPACE	kern/monitor.c	91;"	d	language:C	file:
_CONSOLE_H_	kern/console.h	4;"	d	language:C++
__va_size	inc/stdarg.h	8;"	d	language:C++
_panic	kern/init.c	/^void _panic(const char *file, int line, const char *fmt,...)$/;"	f	language:C	signature:(const char *file, int line, const char *fmt,...)
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f	language:C	signature:(const char *file, int line, const char *fmt,...)
accept	lib/sockets.c	/^accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f	language:C	signature:(int s, struct sockaddr *addr, socklen_t *addrlen)
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	language:C	file:
assert	inc/assert.h	14;"	d	language:C++
basemem	kern/pmap.c	/^static size_t basemem;		\/\/ Amount of base memory (in bytes)$/;"	v	language:C	file:
bind	lib/sockets.c	/^bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f	language:C	signature:(int s, struct sockaddr *name, socklen_t namelen)
bool	inc/types.h	/^typedef int bool;$/;"	t	language:C++
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n, uint32_t align)$/;"	f	language:C	file:	signature:(uint32_t n, uint32_t align)
boot_cr3	kern/pmap.c	/^physaddr_t boot_cr3;		\/\/ Physical address of boot time page directory$/;"	v	language:C
boot_freemem	kern/pmap.c	/^static char* boot_freemem;	\/\/ Pointer to next byte of free mem$/;"	v	language:C	file:
boot_map_segment	kern/pmap.c	/^boot_map_segment(pde_t *pgdir, uintptr_t la, size_t size, physaddr_t pa, int perm)$/;"	f	language:C	file:	signature:(pde_t *pgdir, uintptr_t la, size_t size, physaddr_t pa, int perm)
boot_pgdir	kern/pmap.c	/^pde_t* boot_pgdir;		\/\/ Virtual address of boot time page directory$/;"	v	language:C
bootmain	boot/main.c	/^void bootmain(void)$/;"	f	language:C	signature:(void)
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f	language:C++	signature:(void)
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	language:C	struct:__anon1	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	language:C	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	language:C	file:
cga_init	kern/console.c	/^cga_init(void)$/;"	f	language:C	file:	signature:(void)
cga_putc	kern/console.c	/^static void cga_putc(int c)$/;"	f	language:C	file:	signature:(int c)
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	language:C	file:
check_boot_pgdir	kern/pmap.c	/^check_boot_pgdir(void)$/;"	f	language:C	file:	signature:(void)
check_page_alloc	kern/pmap.c	/^check_page_alloc()$/;"	f	language:C	file:
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	language:C	file:	signature:(pde_t *pgdir, uintptr_t va)
closesocket	lib/sockets.c	/^closesocket(int s)$/;"	f	language:C	signature:(int s)
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	language:C	struct:sprintbuf	file:
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	language:C	typeref:struct:Command	file:
connect	lib/sockets.c	/^connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f	language:C	signature:(int s, const struct sockaddr *name, socklen_t namelen)
cons	kern/console.c	/^} cons;$/;"	v	language:C	typeref:struct:__anon1	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f	language:C	signature:(void)
cons_init	kern/console.c	/^cons_init(void)$/;"	f	language:C	signature:(void)
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	language:C	file:	signature:(int (*proc)(void))
cons_putc	kern/console.c	/^static void cons_putc(int c)$/;"	f	language:C	file:	signature:(int c)
cprintf	kern/printf.c	/^int cprintf(const char *fmt, ...)$/;"	f	language:C	signature:(const char *fmt, ...)
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f	language:C++	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cputchar	kern/console.c	/^void cputchar(int c)$/;"	f	language:C	signature:(int c)
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	language:C	file:
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	language:C	file:
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] = $/;"	v	language:C	file:
debug	lib/nsipc.c	5;"	d	language:C	file:
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f	language:C	signature:(uintptr_t addr, struct Eipdebuginfo *info)
delay	kern/console.c	/^static void delay(void)$/;"	f	language:C	file:	signature:(void)
desc	kern/monitor.c	/^	const char *desc;$/;"	m	language:C	struct:Command	file:
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	language:C++	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	language:C++	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	language:C++	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	language:C++	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	language:C++	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	language:C++	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	language:C++	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	language:C++	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	language:C++	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	language:C++	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	language:C++	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	language:C++	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	language:C++	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	language:C++	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	language:C++	struct:Elf
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	language:C	struct:sprintbuf	file:
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	language:C++	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	language:C++	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	language:C++	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	language:C++	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	language:C++	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	language:C++	struct:Eipdebuginfo
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR + 1] =$/;"	v	language:C	file:
extmem	kern/pmap.c	/^static size_t extmem;		\/\/ Amount of extended memory (in bytes)$/;"	v	language:C	file:
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	language:C	struct:Command	file:
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	language:C++	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	language:C++	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	language:C++	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	language:C++	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	language:C++	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	language:C++	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	language:C++	struct:Gatedesc
gd_ss	inc/mmu.h	/^	unsigned gd_ss : 16;         \/\/ segment selector$/;"	m	language:C++	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	language:C++	struct:Gatedesc
gdt	kern/pmap.c	/^struct Segdesc gdt[] =$/;"	v	language:C	typeref:struct:Segdesc
gdt_pd	kern/pmap.c	/^struct Pseudodesc gdt_pd = {$/;"	v	language:C	typeref:struct:Pseudodesc
getchar	kern/console.c	/^int getchar(void)$/;"	f	language:C	signature:(void)
getint	lib/printfmt.c	/^static long long getint(va_list *ap, int lflag)$/;"	f	language:C	file:	signature:(va_list *ap, int lflag)
geto	lib/printfmt.c	/^static long long geto(va_list *ap, int lflag)$/;"	f	language:C	file:	signature:(va_list *ap, int lflag)
getuint	lib/printfmt.c	/^static unsigned long long getuint(va_list *ap, int lflag)$/;"	f	language:C	file:	signature:(va_list *ap, int lflag)
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	language:C	signature:(void)
i386_init	kern/init.c	/^void i386_init(void)$/;"	f	language:C	signature:(void)
i386_vm_init	kern/pmap.c	/^i386_vm_init(void)$/;"	f	language:C	signature:(void)
inb	inc/x86.h	/^inb(int port)$/;"	f	language:C++	signature:(int port)
inl	inc/x86.h	/^inl(int port)$/;"	f	language:C++	signature:(int port)
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f	language:C++	signature:(int port, void *addr, int cnt)
insl	inc/x86.h	/^static __inline void insl(int port, void *addr, int cnt)$/;"	f	language:C++	signature:(int port, void *addr, int cnt)
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f	language:C++	signature:(int port, void *addr, int cnt)
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t	language:C++
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t	language:C++
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t	language:C++
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t	language:C++
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t	language:C++
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f	language:C++	signature:(void *addr)
inw	inc/x86.h	/^inw(int port)$/;"	f	language:C++	signature:(int port)
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f	language:C	signature:(int fdnum)
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	language:C	file:	signature:(void)
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f	language:C	signature:(void)
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	language:C	file:	signature:(void)
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f	language:C++	signature:(uint32_t val)
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f	language:C++	signature:(uint32_t val)
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f	language:C++	signature:(uint32_t val)
lidt	inc/x86.h	/^lidt(void *p)$/;"	f	language:C++	signature:(void *p)
listen	lib/sockets.c	/^listen(int s, int backlog)$/;"	f	language:C	signature:(int s, int backlog)
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f	language:C++	signature:(uint16_t sel)
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	language:C	file:	signature:(int c)
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f	language:C++	signature:(uint16_t sel)
maxpa	kern/pmap.c	/^static physaddr_t maxpa;	\/\/ Maximum physical address$/;"	v	language:C	file:
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f	language:C	signature:(unsigned reg)
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f	language:C	signature:(unsigned reg, unsigned datum)
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f	language:C	signature:(const void *v1, const void *v2, size_t n)
memcpy	lib/string.c	/^memcpy(void *dst, void *src, size_t n)$/;"	f	language:C	signature:(void *dst, void *src, size_t n)
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f	language:C	signature:(const void *s, int c, size_t n)
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f	language:C	signature:(void *dst, const void *src, size_t n)
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f	language:C	signature:(void *v, int c, size_t n)
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f	language:C	signature:(int argc, char **argv, struct Trapframe *tf)
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f	language:C	signature:(int argc, char **argv, struct Trapframe *tf)
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f	language:C	signature:(int argc, char **argv, struct Trapframe *tf)
monitor	kern/monitor.c	/^void monitor(struct Trapframe *tf)$/;"	f	language:C	signature:(struct Trapframe *tf)
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	language:C++	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	language:C++	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	language:C++	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	language:C++	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	language:C++	struct:Stab
name	kern/monitor.c	/^	const char *name;$/;"	m	language:C	struct:Command	file:
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	language:C	file:
npage	kern/pmap.c	/^size_t npage;			\/\/ Amount of physical memory (in pages)$/;"	v	language:C
nsipc	lib/nsipc.c	/^nsipc(unsigned type, void *fsreq, void *dstva, int *perm)$/;"	f	language:C	file:	signature:(unsigned type, void *fsreq, void *dstva, int *perm)
nsipc_accept	lib/nsipc.c	/^nsipc_accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f	language:C	signature:(int s, struct sockaddr *addr, socklen_t *addrlen)
nsipc_bind	lib/nsipc.c	/^nsipc_bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f	language:C	signature:(int s, struct sockaddr *name, socklen_t namelen)
nsipc_close	lib/nsipc.c	/^nsipc_close(int s)$/;"	f	language:C	signature:(int s)
nsipc_connect	lib/nsipc.c	/^nsipc_connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f	language:C	signature:(int s, const struct sockaddr *name, socklen_t namelen)
nsipc_listen	lib/nsipc.c	/^nsipc_listen(int s, int backlog)$/;"	f	language:C	signature:(int s, int backlog)
nsipc_recv	lib/nsipc.c	/^nsipc_recv(int s, void *mem, int len, unsigned int flags)$/;"	f	language:C	signature:(int s, void *mem, int len, unsigned int flags)
nsipc_send	lib/nsipc.c	/^nsipc_send(int s, const void *dataptr, int size, unsigned int flags)$/;"	f	language:C	signature:(int s, const void *dataptr, int size, unsigned int flags)
nsipc_shutdown	lib/nsipc.c	/^nsipc_shutdown(int s, int how)$/;"	f	language:C	signature:(int s, int how)
nsipc_socket	lib/nsipc.c	/^nsipc_socket(int domain, int type, int protocol)$/;"	f	language:C	signature:(int domain, int type, int protocol)
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	language:C	file:	signature:(int r)
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t	language:C++
offsetof	inc/types.h	70;"	d	language:C++
outb	inc/x86.h	/^static __inline void outb(int port, uint8_t data)$/;"	f	language:C++	signature:(int port, uint8_t data)
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f	language:C++	signature:(int port, uint32_t data)
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f	language:C++	signature:(int port, const void *addr, int cnt)
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f	language:C++	signature:(int port, const void *addr, int cnt)
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f	language:C++	signature:(int port, const void *addr, int cnt)
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f	language:C++	signature:(int port, uint16_t data)
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	language:C++	struct:Proghdr
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	language:C++	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	language:C++	struct:Proghdr
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	language:C++	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	language:C++	struct:Proghdr
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	language:C++	struct:Proghdr
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	language:C++	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	language:C++	struct:Proghdr
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f	language:C++	signature:(physaddr_t pa)
page2kva	kern/pmap.h	/^page2kva(struct Page *pp)$/;"	f	language:C++	signature:(struct Page *pp)
page2pa	kern/pmap.h	/^page2pa(struct Page *pp)$/;"	f	language:C++	signature:(struct Page *pp)
page2ppn	kern/pmap.h	/^page2ppn(struct Page *pp)$/;"	f	language:C++	signature:(struct Page *pp)
page_alloc	kern/pmap.c	/^page_alloc(struct Page **pp_store)$/;"	f	language:C	signature:(struct Page **pp_store)
page_check	kern/pmap.c	/^page_check(void)$/;"	f	language:C	file:	signature:(void)
page_decref	kern/pmap.c	/^page_decref(struct Page* pp)$/;"	f	language:C	signature:(struct Page* pp)
page_free	kern/pmap.c	/^page_free(struct Page *pp)$/;"	f	language:C	signature:(struct Page *pp)
page_free_list	kern/pmap.c	/^static struct Page_list page_free_list;	\/\/ Free list of physical pages$/;"	v	language:C	typeref:struct:Page_list	file:
page_init	kern/pmap.c	/^page_init(void)$/;"	f	language:C	signature:(void)
page_initpp	kern/pmap.c	/^page_initpp(struct Page *pp)$/;"	f	language:C	file:	signature:(struct Page *pp)
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct Page *pp, void *va, int perm) $/;"	f	language:C	signature:(pde_t *pgdir, struct Page *pp, void *va, int perm)
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f	language:C	signature:(pde_t *pgdir, void *va, pte_t **pte_store)
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f	language:C	signature:(pde_t *pgdir, void *va)
pages	kern/pmap.c	/^struct Page* pages;		\/\/ Virtual address of physical page array$/;"	v	language:C	typeref:struct:Page
panic	inc/assert.h	12;"	d	language:C++
panicstr	kern/init.c	/^static const char *panicstr;$/;"	v	language:C	file:
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	language:C++	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	language:C++	struct:Pseudodesc
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t	language:C++
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f	language:C	signature:(pde_t *pgdir, const void *va, int create)
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t	language:C++
pp_link	inc/memlayout.h	/^	Page_LIST_entry_t pp_link;	\/* free list link *\/$/;"	m	language:C++	struct:Page
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	language:C++	struct:Page
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t	language:C++
printfmt	lib/printfmt.c	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f	language:C	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printnum	lib/printfmt.c	/^static void printnum(void (*putch)(int, void*), void *putdat,$/;"	f	language:C	file:	signature:(void (*putch)(int, void*), void *putdat, unsigned long long num, unsigned base, int width, int padc)
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t	language:C++
putch	kern/printf.c	/^static void putch(int ch, int *cnt)$/;"	f	language:C	file:	signature:(int ch, int *cnt)
rcr0	inc/x86.h	/^rcr0(void)$/;"	f	language:C++	signature:(void)
rcr2	inc/x86.h	/^rcr2(void)$/;"	f	language:C++	signature:(void)
rcr3	inc/x86.h	/^rcr3(void)$/;"	f	language:C++	signature:(void)
rcr4	inc/x86.h	/^rcr4(void)$/;"	f	language:C++	signature:(void)
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f	language:C++	signature:(void)
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f	language:C++	signature:(void)
read_eip	kern/monitor.c	/^read_eip()$/;"	f	language:C
read_esp	inc/x86.h	/^read_esp(void)$/;"	f	language:C++	signature:(void)
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f	language:C++	signature:(void)
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f	language:C	signature:(const char *prompt)
readsect	boot/main.c	/^void readsect(void *dst, uint32_t offset)$/;"	f	language:C	signature:(void *dst, uint32_t offset)
readseg	boot/main.c	/^void readseg(uint32_t va, uint32_t count, uint32_t offset)$/;"	f	language:C	signature:(uint32_t va, uint32_t count, uint32_t offset)
recv	lib/sockets.c	/^recv(int s, void *mem, int len, unsigned int flags)$/;"	f	language:C	signature:(int s, void *mem, int len, unsigned int flags)
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	language:C	struct:__anon1	file:
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	language:C	file:	signature:(char *buf, struct Trapframe *tf)
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	language:C++	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	language:C++	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	language:C++	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	language:C++	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	language:C++	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	language:C++	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	language:C++	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	language:C++	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	language:C++	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	language:C++	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	language:C++	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	language:C++	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	language:C++	struct:Segdesc
send	lib/sockets.c	/^send(int s, const void *dataptr, int size, unsigned int flags)$/;"	f	language:C	signature:(int s, const void *dataptr, int size, unsigned int flags)
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	language:C	file:
serial_init	kern/console.c	/^serial_init(void)$/;"	f	language:C	file:	signature:(void)
serial_intr	kern/console.c	/^void serial_intr(void)$/;"	f	language:C	signature:(void)
serial_proc_data	kern/console.c	/^static int serial_proc_data(void)$/;"	f	language:C	file:	signature:(void)
serial_putc	kern/console.c	/^static void serial_putc(int c)$/;"	f	language:C	file:	signature:(int c)
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	language:C++	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	language:C++	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	language:C++	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	language:C++	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	language:C++	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	language:C++	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	language:C++	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	language:C++	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	language:C++	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	language:C++	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] = $/;"	v	language:C	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] = $/;"	v	language:C	file:
shutdown	lib/sockets.c	/^shutdown(int s, int how)$/;"	f	language:C	signature:(int s, int how)
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t	language:C++
snprintf	lib/printfmt.c	/^int snprintf(char *buf, int n, const char *fmt, ...)$/;"	f	language:C	signature:(char *buf, int n, const char *fmt, ...)
socket	lib/sockets.c	/^socket(int domain, int type, int protocol)$/;"	f	language:C	signature:(int domain, int type, int protocol)
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	language:C	file:
sprintputch	lib/printfmt.c	/^static void sprintputch(int ch, struct sprintbuf *b)$/;"	f	language:C	file:	signature:(int ch, struct sprintbuf *b)
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t	language:C++
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	language:C	file:	signature:(const struct Stab *stabs, int *region_left, int *region_right, int type, uintptr_t addr)
static_assert	inc/assert.h	18;"	d	language:C++
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f	language:C	signature:(const char *s, char c)
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f	language:C	signature:(const char *p, const char *q)
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f	language:C	signature:(char *dst, const char *src)
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f	language:C	signature:(const char *s, char c)
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f	language:C	signature:(char *dst, const char *src, size_t size)
strlen	lib/string.c	/^strlen(const char *s)$/;"	f	language:C	signature:(const char *s)
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f	language:C	signature:(const char *p, const char *q, size_t n)
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f	language:C	signature:(char *dst, const char *src, size_t size)
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f	language:C	signature:(const char *s, size_t size)
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f	language:C	signature:(const char *s, char **endptr, int base)
test_backtrace	kern/init.c	/^void test_backtrace(int x)$/;"	f	language:C	signature:(int x)
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f	language:C	signature:(pde_t *pgdir, void *va)
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f	language:C++	signature:(void)
togglecode	kern/console.c	/^static uint8_t togglecode[256] = $/;"	v	language:C	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	language:C++	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	language:C++	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	language:C++	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	language:C++	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	language:C++	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	language:C++	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	language:C++	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	language:C++	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	language:C++	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	language:C++	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	language:C++	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	language:C++	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	language:C++	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	language:C++	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	language:C++	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	language:C++	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	language:C++	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	language:C++	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	language:C++	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	language:C++	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	language:C++	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	language:C++	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	language:C++	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	language:C++	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	language:C++	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	language:C++	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	language:C++	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	language:C++	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	language:C++	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	language:C++	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	language:C++	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	language:C++	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	language:C++	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	language:C++	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	language:C++	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	language:C++	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	language:C++	struct:Taskstate
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t	language:C++
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t	language:C++
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t	language:C++
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t	language:C++
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t	language:C++
va_arg	inc/stdarg.h	14;"	d	language:C++
va_end	inc/stdarg.h	17;"	d	language:C++
va_list	inc/stdarg.h	/^typedef char *va_list;$/;"	t	language:C++
va_start	inc/stdarg.h	11;"	d	language:C++
vcprintf	kern/printf.c	/^int vcprintf(const char *fmt, va_list ap)$/;"	f	language:C	signature:(const char *fmt, va_list ap)
vprintfmt	lib/printfmt.c	/^void vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f	language:C	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)
vsnprintf	lib/printfmt.c	/^int vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f	language:C	signature:(char *buf, int n, const char *fmt, va_list ap)
waitdisk	boot/main.c	/^void waitdisk(void)$/;"	f	language:C	signature:(void)
warn	inc/assert.h	11;"	d	language:C++
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	language:C	struct:__anon1	file:
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f	language:C++	signature:(uint32_t eflags)
